
package mealmanager;

import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author SHAFIN
 */
public class NewMonthInitializer extends javax.swing.JFrame {

    /**
     * Creates new form ImportAccount
     */
    private final Connection connRefNMI;
    private final String monthyearTagNMI;
    private PreparedStatement preparedstatementNMI;
    private ResultSet resultsetNMI;
    private ResultSet localresultset;
    ModifyMember modMem;

    static int monthVal = 0;
    static int yearVal = 0;
    private static int refID = 0;

    /**
     *
     * @param conn
     * @param tag
     */
    public NewMonthInitializer(Connection conn, String tag) {
        initComponents();
        connRefNMI = conn;
        monthyearTagNMI = tag;

        CreateDbTable createtableNMI = new CreateDbTable(connRefNMI);
        createtableNMI.member_data();
        createtableNMI.tempDbTable();
        createtableNMI.eraseTepmTable();

        modMem = new ModifyMember(connRefNMI);
        modMem.listing();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_import_member = new javax.swing.JTable();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        combo_import_month = new com.toedter.calendar.JMonthChooser();
        jLabel5 = new javax.swing.JLabel();
        cmd_import = new javax.swing.JButton();
        combo_import_year = new com.toedter.calendar.JYearChooser();
        jLayeredPane3 = new javax.swing.JLayeredPane();
        jLabel1 = new javax.swing.JLabel();
        txt_import_id = new javax.swing.JTextField();
        txt_import_pnumber = new javax.swing.JTextField();
        txt_import_email = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_import_balance = new javax.swing.JTextField();
        cmd_new_account = new javax.swing.JButton();
        cmd_delete_account = new javax.swing.JButton();
        icon_empty_balance = new javax.swing.JLabel();
        txt_import_name = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        img_imported = new javax.swing.JLabel();
        cmd_confirm_new_month = new javax.swing.JButton();
        jLayeredPane4 = new javax.swing.JLayeredPane();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txt_username = new javax.swing.JTextField();
        txt_repass = new javax.swing.JPasswordField();
        txt_pass = new javax.swing.JPasswordField();
        jLabel8 = new javax.swing.JLabel();
        txt_status = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocationByPlatform(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setForeground(new java.awt.Color(240, 240, 240));

        jLayeredPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Members", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 24), new java.awt.Color(240, 240, 240))); // NOI18N

        table_import_member.setBackground(new java.awt.Color(102, 102, 102));
        table_import_member.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        table_import_member.setForeground(new java.awt.Color(240, 240, 240));
        table_import_member.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        table_import_member.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_import_memberMouseClicked(evt);
            }
        });
        table_import_member.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                table_import_memberKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(table_import_member);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                .addContainerGap())
        );
        jLayeredPane1.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPane2.setBackground(new java.awt.Color(240, 240, 240));
        jLayeredPane2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Import", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 24), new java.awt.Color(255, 255, 255))); // NOI18N

        combo_import_month.setBackground(new java.awt.Color(102, 102, 102));
        combo_import_month.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(240, 240, 240));
        jLabel5.setText("Month");

        cmd_import.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmd_import.setText("IMPORT");
        cmd_import.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_importActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jLayeredPane2Layout = new javax.swing.GroupLayout(jLayeredPane2);
        jLayeredPane2.setLayout(jLayeredPane2Layout);
        jLayeredPane2Layout.setHorizontalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmd_import, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jLayeredPane2Layout.createSequentialGroup()
                        .addComponent(combo_import_month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(combo_import_year, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(107, 107, 107))
        );
        jLayeredPane2Layout.setVerticalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo_import_month, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                    .addComponent(combo_import_year, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmd_import, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jLayeredPane2.setLayer(combo_import_month, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(cmd_import, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane2.setLayer(combo_import_year, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLayeredPane3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Credential", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 24), new java.awt.Color(255, 255, 255))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(240, 240, 240));
        jLabel1.setText("Name");

        txt_import_id.setEditable(false);
        txt_import_id.setBackground(new java.awt.Color(102, 102, 102));
        txt_import_id.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txt_import_pnumber.setEditable(false);
        txt_import_pnumber.setBackground(new java.awt.Color(102, 102, 102));
        txt_import_pnumber.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        txt_import_email.setEditable(false);
        txt_import_email.setBackground(new java.awt.Color(102, 102, 102));
        txt_import_email.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(240, 240, 240));
        jLabel4.setText("Contact");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(240, 240, 240));
        jLabel3.setText("E-mail");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(240, 240, 240));
        jLabel7.setText("Balance");

        txt_import_balance.setEditable(false);
        txt_import_balance.setBackground(new java.awt.Color(102, 102, 102));
        txt_import_balance.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        cmd_new_account.setText("*NEW");
        cmd_new_account.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_new_accountActionPerformed(evt);
            }
        });

        cmd_delete_account.setText("DELETE");
        cmd_delete_account.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_delete_accountActionPerformed(evt);
            }
        });

        icon_empty_balance.setIcon(new javax.swing.ImageIcon("E:\\Dropbox\\PROJECTS\\NetBeansProjects\\MealManager\\icons\\delete-icon16px.png")); // NOI18N
        icon_empty_balance.setToolTipText("Empty Balance");
        icon_empty_balance.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                icon_empty_balanceMouseClicked(evt);
            }
        });

        txt_import_name.setEditable(false);
        txt_import_name.setBackground(new java.awt.Color(102, 102, 102));
        txt_import_name.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(240, 240, 240));
        jLabel12.setText("ID");

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(img_imported, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(img_imported, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jLayeredPane3Layout = new javax.swing.GroupLayout(jLayeredPane3);
        jLayeredPane3.setLayout(jLayeredPane3Layout);
        jLayeredPane3Layout.setHorizontalGroup(
            jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane3Layout.createSequentialGroup()
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jLayeredPane3Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jLayeredPane3Layout.createSequentialGroup()
                                .addComponent(txt_import_id, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txt_import_name)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jLayeredPane3Layout.createSequentialGroup()
                        .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jLayeredPane3Layout.createSequentialGroup()
                                .addComponent(cmd_delete_account, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cmd_new_account, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jLayeredPane3Layout.createSequentialGroup()
                                .addComponent(txt_import_balance, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(icon_empty_balance))
                            .addComponent(txt_import_pnumber, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_import_email)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jLayeredPane3Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(22, 22, 22))
        );
        jLayeredPane3Layout.setVerticalGroup(
            jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane3Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_import_id, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_import_name, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_import_email, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(7, 7, 7)
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_import_pnumber, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(icon_empty_balance, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_import_balance, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)))
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmd_new_account)
                    .addComponent(cmd_delete_account))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPane3.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(txt_import_id, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(txt_import_pnumber, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(txt_import_email, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(txt_import_balance, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(cmd_new_account, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(cmd_delete_account, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(icon_empty_balance, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(txt_import_name, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jLabel12, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jPanel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        cmd_confirm_new_month.setBackground(new java.awt.Color(102, 102, 102));
        cmd_confirm_new_month.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cmd_confirm_new_month.setForeground(new java.awt.Color(51, 255, 51));
        cmd_confirm_new_month.setText("CONFIRM");
        cmd_confirm_new_month.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmd_confirm_new_monthActionPerformed(evt);
            }
        });

        jLayeredPane4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Admin", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 24), new java.awt.Color(240, 240, 240))); // NOI18N

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(240, 240, 240));
        jLabel11.setText("Re type password");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(240, 240, 240));
        jLabel10.setText("Password");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(240, 240, 240));
        jLabel9.setText("Username");

        txt_username.setBackground(new java.awt.Color(102, 102, 102));
        txt_username.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_username.setForeground(new java.awt.Color(240, 240, 240));

        txt_repass.setBackground(new java.awt.Color(102, 102, 102));
        txt_repass.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_repass.setForeground(new java.awt.Color(240, 240, 240));

        txt_pass.setBackground(new java.awt.Color(102, 102, 102));
        txt_pass.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_pass.setForeground(new java.awt.Color(240, 240, 240));

        javax.swing.GroupLayout jLayeredPane4Layout = new javax.swing.GroupLayout(jLayeredPane4);
        jLayeredPane4.setLayout(jLayeredPane4Layout);
        jLayeredPane4Layout.setHorizontalGroup(
            jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txt_repass)
                    .addComponent(txt_username, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_pass))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPane4Layout.setVerticalGroup(
            jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txt_username, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_pass, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txt_repass, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jLayeredPane4.setLayer(jLabel11, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(jLabel10, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(jLabel9, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(txt_username, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(txt_repass, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(txt_pass, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 204, 0));
        jLabel8.setText("Status :");

        txt_status.setEditable(false);
        txt_status.setBackground(new java.awt.Color(51, 51, 51));
        txt_status.setForeground(new java.awt.Color(240, 240, 240));
        txt_status.setBorder(null);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLayeredPane1)
                    .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLayeredPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(txt_status, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(jLabel8))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(cmd_confirm_new_month)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_status, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(jLayeredPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cmd_confirm_new_month, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLayeredPane3)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(836, 553));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmd_importActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_importActionPerformed

        int month = combo_import_month.getMonth() + 1;
        int year = combo_import_year.getYear();
        String monthyearImpTag = "_" + month + "_" + year;

        try {
            //this checks the import validation
            String sql = "SELECT name FROM sqlite_master WHERE type='table' AND name='report" + monthyearImpTag + "'";

            preparedstatementNMI = connRefNMI.prepareStatement(sql);
            resultsetNMI = preparedstatementNMI.executeQuery();

            if (resultsetNMI.next()) {

                sql = "SELECT * FROM [memberProfile" + monthyearImpTag + "]";
                preparedstatementNMI = connRefNMI.prepareStatement(sql);
                localresultset = preparedstatementNMI.executeQuery();

                while (localresultset.next()) {
                    int id = localresultset.getInt("ID");
                    String name = localresultset.getString("firstname");
                    String lastname = localresultset.getString("lastname");
                    String email = localresultset.getString("email");
                    String phonenumber = localresultset.getString("PhoneNumber");
                    double balance = localresultset.getDouble("Balance");
                    byte[] img = localresultset.getBytes("image");

                    modMem.tempInsertNewMember(id, name, lastname, email, phonenumber, balance);

                    if (img != null) {
                        ImageHandler tmpinsertimg = new ImageHandler(connRefNMI);
                        tmpinsertimg.saveImageToDb("TempReport", id, img);
                        img = null;
                    }
                }

                modMem.listing();
                txt_status.setText("importing DONE succesfully !");
                localresultset.close();
            } else {
                JOptionPane.showMessageDialog(null, " ERROR: NO SUCH DATA TO IMPORT");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, " ERROR: NO SUCH DATA TO IMPORT");
        } finally {
            try {
                if (resultsetNMI != null) {
                    resultsetNMI.close();
                }
                if (preparedstatementNMI != null) {
                    preparedstatementNMI.close();
                }
            } catch (SQLException e) {
            }
        }
    }//GEN-LAST:event_cmd_importActionPerformed

    private void cmd_confirm_new_monthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_confirm_new_monthActionPerformed
        String username = txt_username.getText();
        String pass = txt_pass.getText();
        String repass = txt_repass.getText();

        ModifyMember finalMem = new ModifyMember(connRefNMI);

        //username and password validation
        if (username.isEmpty()) {
            JOptionPane.showMessageDialog(null, "You MUST provide a USERNAME");
        } else if (pass.isEmpty()) {
            JOptionPane.showMessageDialog(null, "PASSWORD field cant be EMPTY");
        } else if (repass.isEmpty()) {
            JOptionPane.showMessageDialog(null, "retyping PASSWORD needed");
        } else if (!pass.equals(repass)) {
            JOptionPane.showMessageDialog(null, "password doesnt MATCH");
            txt_repass.setText("");
        } else {

            try {
                CreateDbTable createTable = new CreateDbTable(connRefNMI, monthyearTagNMI);
                //creating all tables for the month
                createTable.BazarHistory(monthVal, yearVal);
                //status("Bazar Table created");
                createTable.Deposite(monthVal, yearVal);
                //status("Deposite table created !");
                createTable.Mealtable(monthVal, yearVal);
                //status("Meal table created !");
                createTable.Report(monthVal, yearVal);
                //status("Inserting members Account!");

                //inserting member accounts to the month based tables
                String sql = "SELECT * FROM TempReport ORDER BY ID";
                preparedstatementNMI = connRefNMI.prepareStatement(sql);
                resultsetNMI = preparedstatementNMI.executeQuery();

                String monthyear = "_" + monthVal + "_" + yearVal;
                while (resultsetNMI.next()) {
                    int id = resultsetNMI.getInt("ID");
                    String fname = resultsetNMI.getString("Name");
                    String lname = resultsetNMI.getString("LastName");
                    String email = resultsetNMI.getString("email");
                    String pnumber = resultsetNMI.getString("PhoneNumber");
                    double balance = resultsetNMI.getDouble("Balance");
                    byte[] img = resultsetNMI.getBytes("image");

                    finalMem.insertNewMember(monthyear, id, fname, lname, email, pnumber, balance);

                    if (img != null) {
                        ImageHandler insertimg = new ImageHandler(connRefNMI);
                        insertimg.saveImageToDb("member_data", id, img);
                        img = null;
                        //status("Image Saved");
                    }
                }

                DateAndTime mon= new DateAndTime();
                String monthNAME = mon.monthName(monthVal - 1);
                sql = "INSERT INTO month_data(AdminID, username, password, month, year) VALUES('" + yearVal + "" + monthVal
                        + "', '" + username + "', '" + pass + "', '" + monthNAME + "'," + yearVal + ")";

                preparedstatementNMI = connRefNMI.prepareStatement(sql);
                preparedstatementNMI.execute();

                Generate gen= new Generate(connRefNMI);
                gen.tableDate("bazar_history_" + monthVal + "_" + yearVal, monthVal, yearVal);
                gen.tableDate("meal_table_" + monthVal + "_" + yearVal, monthVal, yearVal);
                txt_status.setText("All DONE !");

                createTable.viewTable();
                createTable.eraseTepmTable();
                close();

                connRefNMI.close();
                Login login = new Login();
                login.setVisible(true);

            } catch (SQLException ex) {
                Logger.getLogger(NewMonthInitializer.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    if (resultsetNMI != null) {
                        resultsetNMI.close();
                    }
                    if (preparedstatementNMI != null) {
                        preparedstatementNMI.close();
                    }
                } catch (SQLException e) {
                }
            }
        }

    }//GEN-LAST:event_cmd_confirm_new_monthActionPerformed


    private void table_import_memberMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_import_memberMouseClicked
        try {
            int row = table_import_member.getSelectedRow();

            String id = (table_import_member.getModel().getValueAt(row, 0)).toString();
            refID = Integer.parseInt(id);

            String sql = "SELECT * FROM TempReport WHERE ID=" + id;
            preparedstatementNMI = connRefNMI.prepareStatement(sql);
            resultsetNMI = preparedstatementNMI.executeQuery();

            if (resultsetNMI.next()) {
                txt_import_id.setText(id);

                String fname = resultsetNMI.getString("Name");
                String lname = resultsetNMI.getString("LastName");
                String name = fname + " " + lname;
                txt_import_name.setText(name);

                String email = resultsetNMI.getString("email");
                txt_import_email.setText(email);

                String pnumber = resultsetNMI.getString("PhoneNumber");
                txt_import_pnumber.setText(pnumber);

                String balance = resultsetNMI.getString("Balance");
                txt_import_balance.setText(balance);
                txt_status.setText("member " + fname + " " + lname + " ID: " + id + " SELECTED");

                ImageHandler importImg = new ImageHandler(connRefNMI);
                ImageIcon img = importImg.retriveImageFromDb(Integer.parseInt(id), "TempReport");
                if (img == null) {
                    img_imported.setIcon(null);
                    img_imported.revalidate();
                } else {
                    Image scaledImg = img.getImage().getScaledInstance(162, 162, Image.SCALE_SMOOTH);
                    img_imported.setIcon(new ImageIcon(scaledImg));
                }

            }

        } catch (SQLException e) {
            Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, e);
        } finally {
            try {
                if (resultsetNMI != null) {
                    resultsetNMI.close();
                }
                if (preparedstatementNMI != null) {
                    preparedstatementNMI.close();
                }
            } catch (SQLException e) {
            }
        }

    }//GEN-LAST:event_table_import_memberMouseClicked

    private void table_import_memberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_table_import_memberKeyReleased
        int Kcode = evt.getKeyCode();
        if (Kcode == KeyEvent.VK_DOWN || Kcode == KeyEvent.VK_UP) {
            try {
                int row = table_import_member.getSelectedRow();

                String id = (table_import_member.getModel().getValueAt(row, 0)).toString();
                refID = Integer.parseInt(id);

                String sql = "SELECT * FROM TempReport WHERE ID=" + id;
                preparedstatementNMI = connRefNMI.prepareStatement(sql);
                resultsetNMI = preparedstatementNMI.executeQuery();

                if (resultsetNMI.next()) {
                    txt_import_id.setText(id);

                    String fname = resultsetNMI.getString("Name");
                    String lname = resultsetNMI.getString("LastName");
                    String name = fname + " " + lname;
                    txt_import_name.setText(name);

                    String email = resultsetNMI.getString("email");
                    txt_import_email.setText(email);

                    String pnumber = resultsetNMI.getString("PhoneNumber");
                    txt_import_pnumber.setText(pnumber);

                    String balance = resultsetNMI.getString("Balance");
                    txt_import_balance.setText(balance);
                    txt_status.setText("member " + fname + " " + lname + " ID: " + id + " SELECTED");

                    ImageHandler importImg = new ImageHandler(connRefNMI);
                    ImageIcon img = importImg.retriveImageFromDb(Integer.parseInt(id), "TempReport");
                    if (img == null) {
                        img_imported.setIcon(null);
                        img_imported.revalidate();
                    } else {
                        Image scaledImg = img.getImage().getScaledInstance(162, 162, Image.SCALE_SMOOTH);
                        img_imported.setIcon(new ImageIcon(scaledImg));
                    }
                }

            } catch (SQLException e) {
                Logger.getLogger(UserInterface.class.getName()).log(Level.SEVERE, null, e);
            } finally {
                try {
                    if (resultsetNMI != null) {
                        resultsetNMI.close();
                    }
                    if (preparedstatementNMI != null) {
                        preparedstatementNMI.close();
                    }
                } catch (SQLException e) {
                }
            }
        }
    }//GEN-LAST:event_table_import_memberKeyReleased

    private void icon_empty_balanceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_icon_empty_balanceMouseClicked
        String bal = txt_import_balance.getText();
        if (!bal.equals("")) {
            try {
                String id = txt_import_id.getText();
                String sql = "UPDATE TempReport SET Balance = 0.0 WHERE ID=" + id;
                preparedstatementNMI = connRefNMI.prepareStatement(sql);
                preparedstatementNMI.execute();

                txt_import_balance.setText("0.0");
                modMem.listing();
            } catch (SQLException ex) {
                Logger.getLogger(NewMonthInitializer.class.getName()).log(Level.SEVERE, null, ex);
            }finally {
                try {
                    if (preparedstatementNMI != null) {
                        preparedstatementNMI.close();
                    }
                } catch (SQLException e) {
                }
            }
        }
    }//GEN-LAST:event_icon_empty_balanceMouseClicked

    private void cmd_delete_accountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_delete_accountActionPerformed

        if (refID > 0) {
            try {
                String sql = "DELETE FROM TempReport WHERE ID=" + refID;
                preparedstatementNMI = connRefNMI.prepareStatement(sql);
                preparedstatementNMI.execute();

                txt_status.setText("succesfully DELETED !");
                modMem.listing();
                //setting empty value in the text fields
                refID = 0;
                txt_import_id.setText("");
                txt_import_name.setText("");
                txt_import_email.setText("");
                txt_import_pnumber.setText("");
                txt_import_balance.setText("");

            } catch (SQLException ex) {
                Logger.getLogger(NewMonthInitializer.class.getName()).log(Level.SEVERE, null, ex);
            }finally {
                try {
                    if (preparedstatementNMI != null) {
                        preparedstatementNMI.close();
                    }
                } catch (SQLException e) {
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Nothing to DELETE!");
        }
    }//GEN-LAST:event_cmd_delete_accountActionPerformed

    private void cmd_new_accountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmd_new_accountActionPerformed

        NewAccount newAcc = new NewAccount("2", connRefNMI);
        newAcc.setVisible(true);
    }//GEN-LAST:event_cmd_new_accountActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            connRefNMI.close();
            Login loginWindow = new Login();
            loginWindow.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(NewMonthInitializer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowClosing

    private void close() {
        WindowEvent windowClosingEvent = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(windowClosingEvent);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmd_confirm_new_month;
    private javax.swing.JButton cmd_delete_account;
    private javax.swing.JButton cmd_import;
    private javax.swing.JButton cmd_new_account;
    private com.toedter.calendar.JMonthChooser combo_import_month;
    private com.toedter.calendar.JYearChooser combo_import_year;
    private javax.swing.JLabel icon_empty_balance;
    private javax.swing.JLabel img_imported;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JLayeredPane jLayeredPane3;
    private javax.swing.JLayeredPane jLayeredPane4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable table_import_member;
    private javax.swing.JTextField txt_import_balance;
    private javax.swing.JTextField txt_import_email;
    private javax.swing.JTextField txt_import_id;
    private javax.swing.JTextField txt_import_name;
    private javax.swing.JTextField txt_import_pnumber;
    private javax.swing.JPasswordField txt_pass;
    private javax.swing.JPasswordField txt_repass;
    public static javax.swing.JTextField txt_status;
    private javax.swing.JTextField txt_username;
    // End of variables declaration//GEN-END:variables
}
