
package mealmanager;

import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.MessagingException;
import javax.swing.JOptionPane;

/**
 *
 * @author SHAFIN
 */
public class MailSettingsUI extends javax.swing.JFrame {

    private Connection connRefMSUI;
    private ResultSet resultsetMSUI;
    private PreparedStatement preparedstatementMSUI;

    int AdminID;
    String existingEmail = null;
    String existingEmailpass = null;

    /**
     * Creates new form MailSettingsUI
     *
     * @param conn
     * @param adminid
     */
    public MailSettingsUI(Connection conn, int adminid) {
        try {
            initComponents();
            connRefMSUI = conn;
            AdminID = adminid;
            
            String sql = "SELECT email, emailpassword FROM month_data WHERE AdminID=" + AdminID;
            preparedstatementMSUI = connRefMSUI.prepareStatement(sql);
            resultsetMSUI = preparedstatementMSUI.executeQuery();

            if (resultsetMSUI.next()) {
                existingEmail = resultsetMSUI.getString("email");
                txt_admin_email.setText(existingEmail);

                existingEmailpass = resultsetMSUI.getString("emailpassword");
                txt_admin_email_pass.setText(existingEmailpass);
            }

            txt_host.setText("smtp.gmail.com");
            txt_port.setText("587");
        } catch (SQLException ex) {
            Logger.getLogger(MailSettingsUI.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                if (resultsetMSUI != null) {
                    resultsetMSUI.close();
                }
                if (preparedstatementMSUI != null) {
                    preparedstatementMSUI.close();
                }
            } catch (SQLException e) {
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_host = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txt_port = new javax.swing.JTextField();
        txt_admin_email = new javax.swing.JTextField();
        button_email_settings_OK = new javax.swing.JButton();
        txt_admin_email_pass = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Email Settings", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18), new java.awt.Color(240, 240, 240))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(240, 240, 240));
        jLabel3.setText("Port:");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(240, 240, 240));
        jLabel1.setText("Host:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(240, 240, 240));
        jLabel4.setText("Email Password:");

        txt_host.setEditable(false);
        txt_host.setBackground(new java.awt.Color(102, 102, 102));
        txt_host.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_host.setForeground(new java.awt.Color(240, 240, 240));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(240, 240, 240));
        jLabel2.setText("Admin Email:");

        txt_port.setEditable(false);
        txt_port.setBackground(new java.awt.Color(102, 102, 102));
        txt_port.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_port.setForeground(new java.awt.Color(240, 240, 240));

        txt_admin_email.setBackground(new java.awt.Color(102, 102, 102));
        txt_admin_email.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_admin_email.setForeground(new java.awt.Color(240, 240, 240));
        txt_admin_email.setCaretColor(new java.awt.Color(240, 240, 240));

        button_email_settings_OK.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        button_email_settings_OK.setText("OK");
        button_email_settings_OK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_email_settings_OKActionPerformed(evt);
            }
        });

        txt_admin_email_pass.setBackground(new java.awt.Color(102, 102, 102));
        txt_admin_email_pass.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txt_admin_email_pass.setForeground(new java.awt.Color(240, 240, 240));
        txt_admin_email_pass.setCaretColor(new java.awt.Color(240, 240, 240));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_admin_email_pass)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(button_email_settings_OK)
                        .addGap(0, 142, Short.MAX_VALUE))
                    .addComponent(txt_host)
                    .addComponent(txt_port)
                    .addComponent(txt_admin_email))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_host, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_port, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(7, 7, 7)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_admin_email, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_admin_email_pass, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(button_email_settings_OK)
                .addContainerGap(137, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 385, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 389, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 13, Short.MAX_VALUE)))
        );

        setSize(new java.awt.Dimension(401, 428));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void button_email_settings_OKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIresultsetMSUIT:event_button_email_settings_OKActionPerformed
        String emailAddress = txt_admin_email.getText();
        String emailPass = txt_admin_email_pass.getText();

        EmailAddressValidator validate = new EmailAddressValidator();

        if (validate.validation(emailAddress)) {

            try {
                String sqlC = "SELECT email, emailpassword FROM month_data WHERE AdminID=" + AdminID;
                preparedstatementMSUI = connRefMSUI.prepareStatement(sqlC);
                resultsetMSUI = preparedstatementMSUI.executeQuery();
                if (resultsetMSUI.next()) {
                    existingEmail = resultsetMSUI.getString("email");
                    existingEmailpass = resultsetMSUI.getString("emailpassword");
                }
            } catch (SQLException ex) {
                Logger.getLogger(MailSettingsUI.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    if (resultsetMSUI != null) {
                        resultsetMSUI.close();
                    }
                    if (preparedstatementMSUI != null) {
                        preparedstatementMSUI.close();
                    }
                } catch (SQLException e) {
                }
            }

            if (!(emailAddress.equals(existingEmail) && emailPass.equals(existingEmailpass))) {
                if (!emailPass.equals("")) {
                    try {
                        //checks internet connection
                        InternetConnection con = new InternetConnection();
                        boolean check = con.checkConnection();
                        if (check) {
                            try {
                                EmailHandler verificationMail = new EmailHandler();

                                String subject = "Email Verification";
                                String message = "Your Email Verification is successful. This email would be used as Admin email."
                                        + "You would be able to retrive your Meal Manager Login username and password with"
                                        + "the help of this email Authentication." + "\n"
                                        + "Thanks";
                                Properties prop = verificationMail.configProperty(emailAddress, emailPass);
                                verificationMail.sendEmail(prop, emailAddress, subject, message, null);

                                JOptionPane.showMessageDialog(null, "Verification Successful! Confirmation mail has been sent.");

                                //saves email and password to database
                                String sql = "UPDATE month_data SET email='" + emailAddress + "' , emailpassword='" + emailPass
                                        + "' WHERE AdminID=" + AdminID;
                                preparedstatementMSUI = connRefMSUI.prepareStatement(sql);
                                preparedstatementMSUI.execute();

                                existingEmail = emailAddress;

                            } catch (MessagingException | IOException ex) {
                                JOptionPane.showMessageDialog(this,
                                        "Error while Verfying e-mail: " + ex.getMessage(),
                                        "Error", JOptionPane.ERROR_MESSAGE);
                            } catch (SQLException ex) {
                                Logger.getLogger(MailSettingsUI.class.getName()).log(Level.SEVERE, null, ex);
                            } finally {
                                try {
                                    if (resultsetMSUI != null) {
                                        resultsetMSUI.close();
                                    }
                                    if (preparedstatementMSUI != null) {
                                        preparedstatementMSUI.close();
                                    }
                                } catch (SQLException e) {
                                }
                            }
                        }
                    } catch (IOException ex) {
                        JOptionPane.showMessageDialog(this,
                                "No Internet Connection: " + ex.getMessage(),
                                "Error", JOptionPane.ERROR_MESSAGE);
                    }

                } else {
                    JOptionPane.showMessageDialog(null, "Password cant be empty");
                }
            } else {
                JOptionPane.showMessageDialog(null, "No value changed");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Provide a valid Email Address");
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_email_settings_OK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txt_admin_email;
    private javax.swing.JPasswordField txt_admin_email_pass;
    private javax.swing.JTextField txt_host;
    private javax.swing.JTextField txt_port;
    // End of variables declaration//GEN-END:variables
}
